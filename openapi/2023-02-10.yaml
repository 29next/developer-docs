openapi: 3.0.3
info:
  title: Admin API
  version: '2023-02-10'
paths:
  /api/admin/apps/{clientId}/settings/:
    get:
      operationId: appsSettingsRetrieve
      parameters:
      - in: path
        name: clientId
        schema:
          type: string
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - apps
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    put:
      operationId: appsSettingsUpdate
      parameters:
      - in: path
        name: clientId
        schema:
          type: string
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - apps
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    patch:
      operationId: appsSettingsPartialUpdate
      parameters:
      - in: path
        name: clientId
        schema:
          type: string
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - apps
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
    delete:
      operationId: appsSettingsDestroy
      parameters:
      - in: path
        name: clientId
        schema:
          type: string
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - apps
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/carts/:
    get:
      operationId: cartsList
      description: |-
        list: Retrieve a list of all open carts. Query can be filtered by cart attributes for a more specific        list of carts.

        read: Retrieve a specific carts details.
      parameters:
      - in: query
        name: product
        schema:
          type: array
          items:
            type: integer
        description: Product
        explode: true
        style: form
      - in: query
        name: date_created_from
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: date_created_to
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: abandoned
        schema:
          type: boolean
      - in: query
        name: currency
        schema:
          type: string
        description: Currency
      - in: query
        name: funnels
        schema:
          type: array
          items:
            type: string
            nullable: true
            title: Funnel
        description: Funnels
        explode: true
        style: form
      - in: query
        name: utm_source
        schema:
          type: string
        description: UTM Source
      - in: query
        name: utm_campaign
        schema:
          type: string
        description: UTM Campaign
      - in: query
        name: utm_term
        schema:
          type: string
        description: UTM Term
      - in: query
        name: utm_content
        schema:
          type: string
        description: UTM Content
      - in: query
        name: affiliate
        schema:
          type: string
        description: Affiliate
      - in: query
        name: subaffiliate1
        schema:
          type: string
        description: Sub Affiliate1
      - in: query
        name: subaffiliate2
        schema:
          type: string
        description: Sub Affiliate2
      - in: query
        name: subaffiliate3
        schema:
          type: string
        description: Sub Affiliate3
      - in: query
        name: subaffiliate4
        schema:
          type: string
        description: Sub Affiliate4
      - in: query
        name: subaffiliate5
        schema:
          type: string
        description: Sub Affiliate5
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - carts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCartList'
          description: ''
    post:
      operationId: cartsCreate
      description: |-
        list: Retrieve a list of all open carts. Query can be filtered by cart attributes for a more specific        list of carts.

        read: Retrieve a specific carts details.
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - carts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCart'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartDetail'
          description: ''
  /api/admin/carts/{id}/:
    get:
      operationId: cartsRetrieve
      description: |-
        list: Retrieve a list of all open carts. Query can be filtered by cart attributes for a more specific        list of carts.

        read: Retrieve a specific carts details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cart.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - carts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartDetail'
          description: ''
    put:
      operationId: cartsUpdate
      description: |-
        list: Retrieve a list of all open carts. Query can be filtered by cart attributes for a more specific        list of carts.

        read: Retrieve a specific carts details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cart.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - carts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateCart'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartDetail'
          description: ''
    delete:
      operationId: cartsDestroy
      description: |-
        list: Retrieve a list of all open carts. Query can be filtered by cart attributes for a more specific        list of carts.

        read: Retrieve a specific carts details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cart.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - carts
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/categories/:
    get:
      operationId: categoriesList
      description: |-
        Api for retrieving and creating product categories.

        list: Retrieve a list of categories.

        read: Retrieve a category detail.

        create: Create a new category.

        update: Update an existing category.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - categories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: categoriesCreate
      description: |-
        Api for retrieving and creating product categories.

        list: Retrieve a list of categories.

        read: Retrieve a category detail.

        create: Create a new category.

        update: Update an existing category.
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/admin/categories/{id}/:
    get:
      operationId: categoriesRetrieve
      description: |-
        Api for retrieving and creating product categories.

        list: Retrieve a list of categories.

        read: Retrieve a category detail.

        create: Create a new category.

        update: Update an existing category.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - categories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categoriesUpdate
      description: |-
        Api for retrieving and creating product categories.

        list: Retrieve a list of categories.

        read: Retrieve a category detail.

        create: Create a new category.

        update: Update an existing category.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/admin/disputes/:
    get:
      operationId: disputesList
      parameters:
      - in: query
        name: id
        schema:
          type: string
        description: ID
      - in: query
        name: type
        schema:
          type: string
          enum:
          - alert
          - chargeback
      - in: query
        name: status
        schema:
          type: string
          enum:
          - new
          - open
          - resolved
      - in: query
        name: order_number
        schema:
          type: string
        description: Order Number
      - in: query
        name: transaction_id
        schema:
          type: string
        description: Transaction ID
      - in: query
        name: card_type
        schema:
          type: array
          items:
            type: string
            nullable: true
            title: Card Brand
            enum:
            - american_express
            - dankort
            - diners_club
            - discover
            - jcb
            - maestro
            - mastercard
            - visa
        description: Card Brand
        explode: true
        style: form
      - in: query
        name: card_first_six
        schema:
          type: string
        description: Card First Six
      - in: query
        name: card_last_four
        schema:
          type: string
        description: Card Last Four
      - in: query
        name: case_number
        schema:
          type: string
        description: Case Number
      - in: query
        name: payment_method
        schema:
          type: string
          nullable: true
        description: Payment Method
      - in: query
        name: resolution
        schema:
          type: string
          nullable: true
          enum:
          - 3ds_authorized_successfully
          - could_not_find_order
          - declined_or_canceled_nothing_to_do
          - issued_full_refund
          - issued_refund_for_remaining_amount
          - lost
          - other
          - previously_refunded_nothing_to_do
          - unable_to_refund_merchant_account_closed
          - won
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - disputes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDisputeList'
          description: ''
    post:
      operationId: disputesCreate
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - disputes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dispute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dispute'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'
          description: ''
  /api/admin/disputes/{id}/:
    get:
      operationId: disputesRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dispute.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - disputes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'
          description: ''
    put:
      operationId: disputesUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dispute.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - disputes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dispute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dispute'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'
          description: ''
    patch:
      operationId: disputesPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dispute.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - disputes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDispute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDispute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDispute'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'
          description: ''
    delete:
      operationId: disputesDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Dispute.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - disputes
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/orders/:
    get:
      operationId: ordersList
      description: |-
        list: Retrieve a list of all orders. Query can be filtered by query parameters for more specific queries.

        create: Orders can be created on the API for existing customers or for new customers within the same API request.

        read: Retrieve a specific order details by Order Number.
      parameters:
      - in: query
        name: search_text
        schema:
          type: string
        description: Search Text
      - in: query
        name: address
        schema:
          type: string
        description: Address
      - in: query
        name: order_number
        schema:
          type: string
        description: Order Number
      - in: query
        name: name
        schema:
          type: string
        description: Name
      - in: query
        name: product
        schema:
          type: array
          items:
            type: integer
        description: Product
        explode: true
        style: form
      - in: query
        name: partner
        schema:
          type: array
          items:
            type: string
        description: Fulfillment Partner
        explode: true
        style: form
      - in: query
        name: sku
        schema:
          type: array
          items:
            type: string
        description: SKU
        explode: true
        style: form
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
            enum:
            - canceled
            - completed
            - confirmed
            - pending
        description: Status
        explode: true
        style: form
      - in: query
        name: payment_method
        schema:
          type: array
          items:
            type: string
        description: Payment Method
        explode: true
        style: form
      - in: query
        name: fulfillment_status
        schema:
          type: array
          items:
            type: string
            enum:
            - delivered
            - fulfilled
            - not_required
            - partially_fulfilled
            - processing
            - unfulfilled
        description: Fulfillment Status
        explode: true
        style: form
      - in: query
        name: payment_status
        schema:
          type: array
          items:
            type: string
            enum:
            - authorized
            - expired
            - expiring
            - paid
            - partially_paid
            - partially_refunded
            - partially_voided
            - pending
            - refunded
            - voided
        description: Payment Status
        explode: true
        style: form
      - in: query
        name: subscription_lifecycle
        schema:
          type: string
          title: Lifecycle
          enum:
          - null
          - non-recurring
          - recurring
        description: Subscription Lifecycle
      - in: query
        name: date_placed_from
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: date_placed_to
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: coupon_code
        schema:
          type: array
          items:
            type: string
            title: Code
        description: Coupon code
        explode: true
        style: form
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: string
        description: Tags
        explode: true
        style: form
      - in: query
        name: offers
        schema:
          type: array
          items:
            type: string
        description: Offers
        explode: true
        style: form
      - in: query
        name: funnels
        schema:
          type: array
          items:
            type: string
            nullable: true
            title: Funnel
        description: Funnels
        explode: true
        style: form
      - in: query
        name: agents
        schema:
          type: array
          items:
            type: string
            format: email
            nullable: true
            title: Email address
        description: Agents
        explode: true
        style: form
      - in: query
        name: utm_source
        schema:
          type: string
        description: UTM Source
      - in: query
        name: utm_campaign
        schema:
          type: string
        description: UTM Campaign
      - in: query
        name: utm_term
        schema:
          type: string
        description: UTM Term
      - in: query
        name: utm_content
        schema:
          type: string
        description: UTM Content
      - in: query
        name: affiliate
        schema:
          type: string
        description: Affiliate
      - in: query
        name: subaffiliate1
        schema:
          type: string
        description: Sub Affiliate1
      - in: query
        name: subaffiliate2
        schema:
          type: string
        description: Sub Affiliate2
      - in: query
        name: subaffiliate3
        schema:
          type: string
        description: Sub Affiliate3
      - in: query
        name: subaffiliate4
        schema:
          type: string
        description: Sub Affiliate4
      - in: query
        name: subaffiliate5
        schema:
          type: string
        description: Sub Affiliate5
      - in: query
        name: is_test
        schema:
          type: boolean
        description: Is Test Order
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: ordersCreate
      description: |-
        list: Retrieve a list of all orders. Query can be filtered by query parameters for more specific queries.

        create: Orders can be created on the API for existing customers or for new customers within the same API request.

        read: Retrieve a specific order details by Order Number.
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/admin/orders/{number}/:
    get:
      operationId: ordersRetrieve
      description: |-
        list: Retrieve a list of all orders. Query can be filtered by query parameters for more specific queries.

        create: Orders can be created on the API for existing customers or for new customers within the same API request.

        read: Retrieve a specific order details by Order Number.
      parameters:
      - in: path
        name: number
        schema:
          type: string
          title: Order number
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: ordersUpdate
      description: |-
        list: Retrieve a list of all orders. Query can be filtered by query parameters for more specific queries.

        create: Orders can be created on the API for existing customers or for new customers within the same API request.

        read: Retrieve a specific order details by Order Number.
      parameters:
      - in: path
        name: number
        schema:
          type: string
          title: Order number
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: ordersPartialUpdate
      description: |-
        list: Retrieve a list of all orders. Query can be filtered by query parameters for more specific queries.

        create: Orders can be created on the API for existing customers or for new customers within the same API request.

        read: Retrieve a specific order details by Order Number.
      parameters:
      - in: path
        name: number
        schema:
          type: string
          title: Order number
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrder'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/admin/orders/{number}/add-line-items/:
    post:
      operationId: ordersAddLineItemsCreate
      description: Add additional items to the order and charge the initial order
        payment method
      parameters:
      - in: path
        name: number
        schema:
          type: string
          title: Order number
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddLineItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddLineItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddLineItem'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/admin/orders/{number}/cancel/:
    post:
      operationId: ordersCancelCreate
      description: |-
        list: Retrieve a list of all orders. Query can be filtered by query parameters for more specific queries.

        create: Orders can be created on the API for existing customers or for new customers within the same API request.

        read: Retrieve a specific order details by Order Number.
      parameters:
      - in: path
        name: number
        schema:
          type: string
          title: Order number
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CancelOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CancelOrder'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/admin/orders/{number}/capture/:
    post:
      operationId: ordersCaptureCreate
      description: Captures the total amount of the previously authorized funds for
        this order.
      parameters:
      - in: path
        name: number
        schema:
          type: string
          title: Order number
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/admin/orders/{number}/fulfillments/:
    get:
      operationId: ordersFulfillmentsRetrieve
      description: Add shipment order for separate line
      parameters:
      - in: path
        name: number
        schema:
          type: string
          title: Order number
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: ordersFulfillmentsCreate
      description: |-
        list: Retrieve a list of all orders. Query can be filtered by query parameters for more specific queries.

        create: Orders can be created on the API for existing customers or for new customers within the same API request.

        read: Retrieve a specific order details by Order Number.
      parameters:
      - in: path
        name: number
        schema:
          type: string
          title: Order number
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrderShipmentTracking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddOrderShipmentTracking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddOrderShipmentTracking'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderShipmentTracking'
          description: ''
  /api/admin/orders/{number}/notes/:
    get:
      operationId: ordersNotesRetrieve
      description: Retrieve a list of all order notes in an existing order.
      parameters:
      - in: path
        name: number
        schema:
          type: string
          title: Order number
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderNote'
          description: ''
    post:
      operationId: ordersNotesCreate
      description: Create an order note in an existing order.
      parameters:
      - in: path
        name: number
        schema:
          type: string
          title: Order number
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateOrderNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateOrderNote'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderNote'
          description: ''
  /api/admin/orders/{number}/refund/:
    post:
      operationId: ordersRefundCreate
      description: |-
        list: Retrieve a list of all orders. Query can be filtered by query parameters for more specific queries.

        create: Orders can be created on the API for existing customers or for new customers within the same API request.

        read: Retrieve a specific order details by Order Number.
      parameters:
      - in: path
        name: number
        schema:
          type: string
          title: Order number
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RefundOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RefundOrder'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/admin/partners/:
    get:
      operationId: partnersList
      description: |-
        list: Retrieve a list of all configured fulfillment partners.

        create: Create a new fulfillment partner.

        update: Update an existing fulfillment partner.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - partners
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartnerList'
          description: ''
    post:
      operationId: partnersCreate
      description: |-
        list: Retrieve a list of all configured fulfillment partners.

        create: Create a new fulfillment partner.

        update: Update an existing fulfillment partner.
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - partners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Partner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Partner'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          description: ''
  /api/admin/partners/{id}/:
    get:
      operationId: partnersRetrieve
      description: |-
        list: Retrieve a list of all configured fulfillment partners.

        create: Create a new fulfillment partner.

        update: Update an existing fulfillment partner.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Fulfillment partner.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - partners
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          description: ''
    put:
      operationId: partnersUpdate
      description: |-
        list: Retrieve a list of all configured fulfillment partners.

        create: Create a new fulfillment partner.

        update: Update an existing fulfillment partner.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Fulfillment partner.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - partners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Partner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Partner'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          description: ''
  /api/admin/products/:
    get:
      operationId: productsList
      description: |-
        Api for retrieving and creating products.

        list: Retrieve a list of all products.

        read: Retrieve a product detail.

        create: Create a new product.

        update: Update an existing product.

        partial_update: Partially update an existing product.

        delete: Delete an existing product.
      parameters:
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: product_class
        schema:
          type: integer
        description: Product class
      - in: query
        name: category
        schema:
          type: array
          items:
            type: integer
        description: Categories
        explode: true
        style: form
      - in: query
        name: range
        schema:
          type: array
          items:
            type: integer
        description: Range
        explode: true
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductListList'
          description: ''
    post:
      operationId: productsCreate
      description: |-
        Api for retrieving and creating products.

        list: Retrieve a list of all products.

        read: Retrieve a product detail.

        create: Create a new product.

        update: Update an existing product.

        partial_update: Partially update an existing product.

        delete: Delete an existing product.
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateProduct'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/admin/products/{id}/:
    get:
      operationId: productsRetrieve
      description: |-
        Api for retrieving and creating products.

        list: Retrieve a list of all products.

        read: Retrieve a product detail.

        create: Create a new product.

        update: Update an existing product.

        partial_update: Partially update an existing product.

        delete: Delete an existing product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: productsUpdate
      description: |-
        Api for retrieving and creating products.

        list: Retrieve a list of all products.

        read: Retrieve a product detail.

        create: Create a new product.

        update: Update an existing product.

        partial_update: Partially update an existing product.

        delete: Delete an existing product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProduct'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: productsPartialUpdate
      description: |-
        Api for retrieving and creating products.

        list: Retrieve a list of all products.

        read: Retrieve a product detail.

        create: Create a new product.

        update: Update an existing product.

        partial_update: Partially update an existing product.

        delete: Delete an existing product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProduct'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: productsDestroy
      description: |-
        Api for retrieving and creating products.

        list: Retrieve a list of all products.

        read: Retrieve a product detail.

        create: Create a new product.

        update: Update an existing product.

        partial_update: Partially update an existing product.

        delete: Delete an existing product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/products/{id}/children/:
    get:
      operationId: productsChildrenRetrieve2
      description: Api for retrieving and creating child products in an existing product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariant'
          description: ''
    post:
      operationId: productsChildrenCreate
      description: |-
        Api for retrieving and creating products.

        list: Retrieve a list of all products.

        read: Retrieve a product detail.

        create: Create a new product.

        update: Update an existing product.

        partial_update: Partially update an existing product.

        delete: Delete an existing product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductVariant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateProductVariant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateProductVariant'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariant'
          description: ''
  /api/admin/products/{id}/images/:
    post:
      operationId: productsImagesCreate
      description: |-
        Create images for product by ID.
        @param: images is list of image file
        @return: list of product image
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/admin/products/children/{id}/:
    get:
      operationId: productsChildrenRetrieve
      description: |-
        Api for retrieving and creating child products.

        list: Retrieve a list of all child products.

        read: Retrieve a child product detail.

        update: Update an existing child product.

        partial_update: Partially update an existing child product.

        delete: Delete an existing child product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariant'
          description: ''
    put:
      operationId: productsChildrenUpdate
      description: |-
        Api for retrieving and creating child products.

        list: Retrieve a list of all child products.

        read: Retrieve a child product detail.

        update: Update an existing child product.

        partial_update: Partially update an existing child product.

        delete: Delete an existing child product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductVariant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateProductVariant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProductVariant'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariant'
          description: ''
    patch:
      operationId: productsChildrenPartialUpdate
      description: |-
        Api for retrieving and creating child products.

        list: Retrieve a list of all child products.

        read: Retrieve a child product detail.

        update: Update an existing child product.

        partial_update: Partially update an existing child product.

        delete: Delete an existing child product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProductVariant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProductVariant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProductVariant'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariant'
          description: ''
    delete:
      operationId: productsChildrenDestroy
      description: |-
        Api for retrieving and creating child products.

        list: Retrieve a list of all child products.

        read: Retrieve a child product detail.

        update: Update an existing child product.

        partial_update: Partially update an existing child product.

        delete: Delete an existing child product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/stockrecords/:
    get:
      operationId: stockrecordsList
      description: |-
        list: Retrieve a list of stock records.

        create: Create a stock record.

        update: Update an existing stock record.

        delete: Delete a stock record.
      parameters:
      - in: query
        name: search_text
        schema:
          type: string
        description: Generic search by product name or partner SKU.
      - in: query
        name: partner
        schema:
          type: array
          items:
            type: integer
        description: Partner
        explode: true
        style: form
      - in: query
        name: sku
        schema:
          type: string
        description: Partner SKU
      - in: query
        name: currency
        schema:
          type: string
          title: Currency
        description: Currency
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - stockrecords
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStockRecordList'
          description: ''
    post:
      operationId: stockrecordsCreate
      description: |-
        list: Retrieve a list of stock records.

        create: Create a stock record.

        update: Update an existing stock record.

        delete: Delete a stock record.
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - stockrecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateStockRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUpdateStockRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUpdateStockRecord'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateStockRecord'
          description: ''
  /api/admin/stockrecords/{id}/:
    get:
      operationId: stockrecordsRetrieve
      description: |-
        list: Retrieve a list of stock records.

        create: Create a stock record.

        update: Update an existing stock record.

        delete: Delete a stock record.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stock record.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - stockrecords
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockRecord'
          description: ''
    patch:
      operationId: stockrecordsPartialUpdate
      description: |-
        list: Retrieve a list of stock records.

        create: Create a stock record.

        update: Update an existing stock record.

        delete: Delete a stock record.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stock record.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - stockrecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStockRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStockRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStockRecord'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockRecord'
          description: ''
    delete:
      operationId: stockrecordsDestroy
      description: |-
        list: Retrieve a list of stock records.

        create: Create a stock record.

        update: Update an existing stock record.

        delete: Delete a stock record.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stock record.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - stockrecords
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/subscriptions/:
    get:
      operationId: subscriptionsList
      parameters:
      - in: query
        name: search_text
        schema:
          type: string
        description: Search Text
      - in: query
        name: address
        schema:
          type: string
        description: Address
      - in: query
        name: date_from
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: date_to
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - canceled
          - past_due
          - pending
          - retrying
        description: Status
      - in: query
        name: product
        schema:
          type: array
          items:
            type: integer
        description: Products
        explode: true
        style: form
      - in: query
        name: sku
        schema:
          type: array
          items:
            type: string
        description: Partner SKU
        explode: true
        style: form
      - in: query
        name: gateway
        schema:
          type: integer
        description: Gateway
      - in: query
        name: order_number
        schema:
          type: string
        description: Order Number
      - in: query
        name: customer_email
        schema:
          type: string
        description: Customer Email
      - in: query
        name: customer_phone_number
        schema:
          type: string
        description: Customer phone number
      - in: query
        name: cancel_reason
        schema:
          type: integer
        description: Cancel Reason
      - in: query
        name: next_renewal_date_from
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: next_renewal_date_to
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: cancel_date_from
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: cancel_date_to
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: funnels
        schema:
          type: array
          items:
            type: string
            nullable: true
            title: Funnel
        description: Funnels
        explode: true
        style: form
      - in: query
        name: agents
        schema:
          type: array
          items:
            type: string
            format: email
            nullable: true
            title: Email address
        description: Agents
        explode: true
        style: form
      - in: query
        name: utm_source
        schema:
          type: string
        description: UTM Source
      - in: query
        name: utm_campaign
        schema:
          type: string
        description: UTM Campaign
      - in: query
        name: utm_term
        schema:
          type: string
        description: UTM Term
      - in: query
        name: utm_content
        schema:
          type: string
        description: UTM Content
      - in: query
        name: affiliate
        schema:
          type: string
        description: Affiliate
      - in: query
        name: subaffiliate1
        schema:
          type: string
        description: Sub Affiliate1
      - in: query
        name: subaffiliate2
        schema:
          type: string
        description: Sub Affiliate2
      - in: query
        name: subaffiliate3
        schema:
          type: string
        description: Sub Affiliate3
      - in: query
        name: subaffiliate4
        schema:
          type: string
        description: Sub Affiliate4
      - in: query
        name: subaffiliate5
        schema:
          type: string
        description: Sub Affiliate5
      - in: query
        name: is_test
        schema:
          type: boolean
        description: Is Test Subscription
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - subscriptions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscriptionList'
          description: ''
    post:
      operationId: subscriptionsCreate
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/admin/subscriptions/{id}/:
    get:
      operationId: subscriptionsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subscription.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - subscriptions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    patch:
      operationId: subscriptionsPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subscription.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateSubscription'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/admin/tickets/:
    get:
      operationId: ticketsList
      parameters:
      - in: query
        name: filter_text
        schema:
          type: string
        description: Generic search by ticket id, subject, or requester email.
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: subject
        schema:
          type: string
        description: Subject
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
            enum:
            - closed
            - new
            - open
            - pending
            - solved
        explode: true
        style: form
      - in: query
        name: requester
        schema:
          type: integer
        description: Requester
      - in: query
        name: assignee
        schema:
          type: integer
        description: Assignee
      - in: query
        name: order_number
        schema:
          type: string
        description: Order Number
      - in: query
        name: product
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: integer
        description: Tags
        explode: true
        style: form
      - in: query
        name: ticket_type
        schema:
          type: integer
      - in: query
        name: priority
        schema:
          type: string
          enum:
          - high
          - low
          - medium
      - in: query
        name: channel
        schema:
          type: string
          enum:
          - api
          - customer_account
          - dashboard
          - email
      - in: query
        name: created_from
        schema:
          type: string
          format: date
        description: Created From
      - in: query
        name: created_to
        schema:
          type: string
          format: date
        description: Created To
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - supports
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTicketList'
          description: ''
    post:
      operationId: ticketsCreate
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - supports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUpdateTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUpdateTicket'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /api/admin/tickets/{id}/:
    get:
      operationId: ticketsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - supports
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    put:
      operationId: ticketsUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - supports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUpdateTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUpdateTicket'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    patch:
      operationId: ticketsPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - supports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCreateUpdateTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCreateUpdateTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCreateUpdateTicket'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /api/admin/tickets/{id}/comments/:
    get:
      operationId: ticketsCommentsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - supports
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    post:
      operationId: ticketsCommentsCreate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - supports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateTicketComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateTicketComment'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /api/admin/tickets/attachments/:
    post:
      operationId: ticketsAttachmentsCreate
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - supports
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  format: binary
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /api/admin/tickettypes/:
    get:
      operationId: tickettypesList
      parameters:
      - in: query
        name: name
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - supports
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTicketTypeList'
          description: ''
  /api/admin/tickettypes/{id}/:
    get:
      operationId: tickettypesRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ticket type.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - supports
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
  /api/admin/transactions/:
    get:
      operationId: transactionsList
      description: |-
        list: Retrieve a list of all transactions. Query can be filtered for a more specific list of transactions.

        read: Retrieve a specific transaction details.
      parameters:
      - in: query
        name: date_created_from
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: date_created_to
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: type
        schema:
          type: string
          title: Type
          enum:
          - authorize
          - debit
          - refund
          - void
        description: Transaction Type
      - in: query
        name: card_type
        schema:
          type: array
          items:
            type: string
            enum:
            - american_express
            - dankort
            - diners_club
            - discover
            - jcb
            - maestro
            - mastercard
            - visa
        description: Card Brand
        explode: true
        style: form
      - in: query
        name: bankcard_first_six
        schema:
          type: string
        description: Bankcard First Six
      - in: query
        name: bankcard_last_four
        schema:
          type: string
        description: Bankcard Last Four
      - in: query
        name: gateway
        schema:
          type: string
        description: Gateway
      - in: query
        name: payment_method
        schema:
          type: string
        description: Payment Method
      - in: query
        name: amount_min
        schema:
          type: number
        description: Amount Min
      - in: query
        name: amount_max
        schema:
          type: number
        description: Amount Max
      - in: query
        name: currency
        schema:
          type: string
      - in: query
        name: core_transaction_code
        schema:
          type: string
        description: Transaction Code
      - in: query
        name: status
        schema:
          type: string
          enum:
          - canceled
          - expired
          - failed
          - pending
          - refunded
          - succeeded
        description: Status
      - in: query
        name: is_3ds
        schema:
          type: boolean
      - in: query
        name: optimized_3ds
        schema:
          type: boolean
      - in: query
        name: downgrade_3ds_retry
        schema:
          type: boolean
        description: 3DS Downgrade Retry
      - in: query
        name: subscription_life_cycle
        schema:
          type: string
          title: Subscription Lifecycle
          enum:
          - non-recurring
          - recurring
      - in: query
        name: funnels
        schema:
          type: array
          items:
            type: string
            nullable: true
            title: Funnel
        description: Funnels
        explode: true
        style: form
      - in: query
        name: utm_source
        schema:
          type: string
        description: UTM Source
      - in: query
        name: utm_campaign
        schema:
          type: string
        description: UTM Campaign
      - in: query
        name: utm_content
        schema:
          type: string
        description: UTM Content
      - in: query
        name: utm_term
        schema:
          type: string
        description: UTM Term
      - in: query
        name: affiliate
        schema:
          type: string
        description: Affiliate
      - in: query
        name: subaffiliate1
        schema:
          type: string
        description: Sub Affiliate 1
      - in: query
        name: subaffiliate2
        schema:
          type: string
        description: Sub Affiliate 2
      - in: query
        name: subaffiliate3
        schema:
          type: string
        description: Sub Affiliate 3
      - in: query
        name: subaffiliate4
        schema:
          type: string
        description: Sub Affiliate 4
      - in: query
        name: subaffiliate5
        schema:
          type: string
        description: Sub Affiliate 5
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - transactions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactionList'
          description: ''
  /api/admin/transactions/{id}/:
    get:
      operationId: transactionsRetrieve
      description: |-
        list: Retrieve a list of all transactions. Query can be filtered for a more specific list of transactions.

        read: Retrieve a specific transaction details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Transaction.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - transactions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/admin/transactions/{id}/capture/:
    post:
      operationId: transactionsCaptureCreate
      description: Captures the previously authorized funds for this transaction.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Transaction.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptureTransaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaptureTransaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CaptureTransaction'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/admin/transactions/{id}/refund/:
    post:
      operationId: transactionsRefundCreate
      description: |-
        list: Retrieve a list of all transactions. Query can be filtered for a more specific list of transactions.

        read: Retrieve a specific transaction details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Transaction.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundTransaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RefundTransaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RefundTransaction'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/admin/users/:
    get:
      operationId: usersList
      description: |-
        list: Retrieve a list of all users of the store.

        create: Create a new user to give them access to the store.

        read: Retrieve the full details of a specific user by ID.

        update: Update an existing user.
      parameters:
      - in: query
        name: email
        schema:
          type: string
        description: Email
      - in: query
        name: name
        schema:
          type: string
        description: Name
      - in: query
        name: phone_number
        schema:
          type: string
        description: Phone Number
      - in: query
        name: language
        schema:
          type: string
          nullable: true
          title: Preferred language
        description: Language
      - in: query
        name: user_type
        schema:
          type: string
        description: Type
      - in: query
        name: date_joined_from
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: date_joined_to
        schema:
          type: string
          format: date
        description: YYYY-MM-DD
      - in: query
        name: is_blocked
        schema:
          type: boolean
      - in: query
        name: accepts_marketing
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: usersCreate
      description: |-
        list: Retrieve a list of all users of the store.

        create: Create a new user to give them access to the store.

        read: Retrieve the full details of a specific user by ID.

        update: Update an existing user.
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/admin/users/{id}/:
    get:
      operationId: usersRetrieve
      description: |-
        list: Retrieve a list of all users of the store.

        create: Create a new user to give them access to the store.

        read: Retrieve the full details of a specific user by ID.

        update: Update an existing user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: usersUpdate
      description: |-
        list: Retrieve a list of all users of the store.

        create: Create a new user to give them access to the store.

        read: Retrieve the full details of a specific user by ID.

        update: Update an existing user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: usersPartialUpdate
      description: |-
        list: Retrieve a list of all users of the store.

        create: Create a new user to give them access to the store.

        read: Retrieve the full details of a specific user by ID.

        update: Update an existing user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/admin/users/{id}/notes/:
    get:
      operationId: usersNotesRetrieve
      description: Retrieve a list of all user notes in an existing user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNote'
          description: ''
    post:
      operationId: usersNotesCreate
      description: Create an user note in an existing user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUserNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUserNote'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNote'
          description: ''
  /api/admin/users/{id}/orders/:
    get:
      operationId: usersOrdersRetrieve
      description: Retrieve a list of all orders for a user by ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWithoutUser'
          description: ''
  /api/admin/users/{id}/subscriptions/:
    get:
      operationId: usersSubscriptionsRetrieve
      description: Retrieve a list of all subscriptions for a user by ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/admin/webhooks/:
    get:
      operationId: webhooksList
      description: |-
        list: Retrieve a list of all configured webhooks.

        create: Create a new webhook to subscribe your endpoint receive event data.

        update: Update an existing webhook.

        partial_update: Partially update an existing webhook.

        destroy: Delete an existing webhook.
      parameters:
      - in: query
        name: name
        schema:
          type: string
        description: Name
      - in: query
        name: events
        schema:
          type: array
          items:
            type: integer
        description: Event Triggers
        explode: true
        style: form
      - in: query
        name: active
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - webhooks
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWebhookList'
          description: ''
    post:
      operationId: webhooksCreate
      description: |-
        list: Retrieve a list of all configured webhooks.

        create: Create a new webhook to subscribe your endpoint receive event data.

        update: Update an existing webhook.

        partial_update: Partially update an existing webhook.

        destroy: Delete an existing webhook.
      parameters:
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Webhook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: ''
  /api/admin/webhooks/{id}/:
    get:
      operationId: webhooksRetrieve
      description: |-
        list: Retrieve a list of all configured webhooks.

        create: Create a new webhook to subscribe your endpoint receive event data.

        update: Update an existing webhook.

        partial_update: Partially update an existing webhook.

        destroy: Delete an existing webhook.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this webhook.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - webhooks
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: ''
    put:
      operationId: webhooksUpdate
      description: |-
        list: Retrieve a list of all configured webhooks.

        create: Create a new webhook to subscribe your endpoint receive event data.

        update: Update an existing webhook.

        partial_update: Partially update an existing webhook.

        destroy: Delete an existing webhook.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this webhook.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Webhook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: ''
    patch:
      operationId: webhooksPartialUpdate
      description: |-
        list: Retrieve a list of all configured webhooks.

        create: Create a new webhook to subscribe your endpoint receive event data.

        update: Update an existing webhook.

        partial_update: Partially update an existing webhook.

        destroy: Delete an existing webhook.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this webhook.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWebhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWebhook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWebhook'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: ''
    delete:
      operationId: webhooksDestroy
      description: |-
        list: Retrieve a list of all configured webhooks.

        create: Create a new webhook to subscribe your endpoint receive event data.

        update: Update an existing webhook.

        partial_update: Partially update an existing webhook.

        destroy: Delete an existing webhook.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this webhook.
        required: true
      - in: header
        name: X-29next-API-Version
        schema:
          type: string
          enum:
          - '2023-02-10'
          default: '2023-02-10'
        required: true
      tags:
      - webhooks
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AddLineItem:
      type: object
      description: |-
        Any transaction that be a part of handle_payment,
            for saving and update status of order
      properties:
        lines:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderLine'
      required:
      - lines
    AddOrderShipmentTracking:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        carrier:
          enum:
          - ups
          - fedex
          - usps
          - dhl
          - asendia
          - boxme
          - hermesworld_uk
          - deutsche_de
          - swiss_post
          - dhl_ecommerce
          - myhermes
          - royal_mail
          - other
          - null
          type: string
          nullable: true
        tracking_link:
          type: string
          nullable: true
          maxLength: 256
        tracking_code:
          type: string
          nullable: true
          maxLength: 256
        reference:
          type: string
          readOnly: true
        send_shipped_notification:
          type: boolean
          nullable: true
        lines:
          type: array
          items:
            type: integer
            nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_created
      - reference
    AdminStockRecord:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        partner_sku:
          type: string
          maxLength: 128
        price_currency:
          type: string
          title: Currency
          maxLength: 12
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_max_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_min_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_suggested_downsell_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        price_retail:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
          title: Price (retail)
        num_in_stock:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Number in stock
        num_allocated:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Number allocated
        low_stock_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        partner:
          type: integer
          nullable: true
      required:
      - id
      - partner_sku
    Agent:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
      required:
      - id
    Attachment:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        file_name:
          type: string
          maxLength: 255
        file:
          type: string
          format: uri
      required:
      - file
      - file_name
      - id
    AttributeOptionGroup:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        options:
          type: array
          items:
            type: string
        name:
          type: string
          maxLength: 128
      required:
      - id
      - name
      - options
    BillingAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        country:
          type: string
          title: ISO 3166-1 alpha-2
        title:
          enum:
          - Mr
          - Miss
          - Mrs
          - Ms
          - Dr
          - ''
          type: string
        line1:
          type: string
          title: First line of address
          maxLength: 255
        line2:
          type: string
          title: Second line of address
          maxLength: 255
        line3:
          type: string
          title: Third line of address
          maxLength: 255
        postcode:
          type: string
          title: Post/Zip-code
          maxLength: 64
        phone_number:
          type: string
          maxLength: 128
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        line4:
          type: string
          title: City
          maxLength: 255
        state:
          type: string
          title: State/Province
          maxLength: 255
      required:
      - country
      - first_name
      - id
      - last_name
      - line1
      - line4
    CancelOrder:
      type: object
      properties:
        full_refund:
          type: boolean
          default: false
        cancel_reason:
          type: string
        send_cancel_notification:
          type: boolean
          default: true
      required:
      - cancel_reason
    CaptureTransaction:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
          nullable: true
          description: "\n            The amount of funds that will be captured.\n\
            \            Must be between 0.01 and the previously authorized amount.\n\
            \            If not specified, the full authorized amount will be captured\
            \ by default.\n        "
    Cart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          type: string
          readOnly: true
          description: 'Available values : Open'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/CartLine'
          readOnly: true
        abandoned:
          type: boolean
        currency:
          type: string
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserInline'
          readOnly: true
        attribution:
          allOf:
          - $ref: '#/components/schemas/MarketingAttribution'
          readOnly: true
        checkout_url:
          type: string
          format: uri
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - attribution
      - checkout_url
      - currency
      - date_created
      - id
      - lines
      - status
      - user
    CartDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          type: string
          readOnly: true
          description: 'Available values : Open'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/CartLine'
          readOnly: true
        abandoned:
          type: boolean
        total_incl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        total_excl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        currency:
          type: string
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserInline'
          readOnly: true
        is_tax_known:
          type: boolean
          readOnly: true
        total_excl_tax_excl_discounts:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        total_incl_tax_excl_discounts:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        total_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        voucher_discounts:
          type: array
          items:
            $ref: '#/components/schemas/VoucherDiscount'
        attribution:
          allOf:
          - $ref: '#/components/schemas/MarketingAttribution'
          readOnly: true
        checkout_url:
          type: string
          format: uri
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - attribution
      - checkout_url
      - currency
      - date_created
      - id
      - is_tax_known
      - lines
      - status
      - total_excl_tax
      - total_excl_tax_excl_discounts
      - total_incl_tax
      - total_incl_tax_excl_discounts
      - total_tax
      - user
    CartLine:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          $ref: '#/components/schemas/ProductForPresentation'
        stockrecord:
          $ref: '#/components/schemas/StockRecordForPresentation'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        price_currency:
          type: string
          title: Currency
          maxLength: 12
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/LineAttribute'
          readOnly: true
        is_upsell:
          type: boolean
          default: false
      required:
      - attributes
      - id
      - product
      - stockrecord
    Category:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        meta_title:
          type: string
          nullable: true
          maxLength: 255
        meta_description:
          type: string
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        is_public:
          type: boolean
          description: Show this category in search results and catalogue listings.
        external_tax_code:
          type: string
          nullable: true
          title: Tax Code
          description: Tax code to be used with external tax systems such as Avalara,
            Taxjar.
          maxLength: 64
        template:
          type: string
          nullable: true
          title: Theme Template
          description: Use a custom template from your theme to customize the category
            display.
          maxLength: 256
        name_en:
          type: string
          nullable: true
          title: Name [en]
          maxLength: 255
        name_fr:
          type: string
          nullable: true
          title: Name [fr]
          maxLength: 255
        name_th:
          type: string
          nullable: true
          title: Name [th]
          maxLength: 255
        name_de:
          type: string
          nullable: true
          title: Name [de]
          maxLength: 255
        name_sv:
          type: string
          nullable: true
          title: Name [sv]
          maxLength: 255
        name_no:
          type: string
          nullable: true
          title: Name [no]
          maxLength: 255
        name_it:
          type: string
          nullable: true
          title: Name [it]
          maxLength: 255
        name_es:
          type: string
          nullable: true
          title: Name [es]
          maxLength: 255
        description_en:
          type: string
          nullable: true
          title: Description [en]
        description_fr:
          type: string
          nullable: true
          title: Description [fr]
        description_th:
          type: string
          nullable: true
          title: Description [th]
        description_de:
          type: string
          nullable: true
          title: Description [de]
        description_sv:
          type: string
          nullable: true
          title: Description [sv]
        description_no:
          type: string
          nullable: true
          title: Description [no]
        description_it:
          type: string
          nullable: true
          title: Description [it]
        description_es:
          type: string
          nullable: true
          title: Description [es]
        meta_title_en:
          type: string
          nullable: true
          title: Meta title [en]
          maxLength: 255
        meta_title_fr:
          type: string
          nullable: true
          title: Meta title [fr]
          maxLength: 255
        meta_title_th:
          type: string
          nullable: true
          title: Meta title [th]
          maxLength: 255
        meta_title_de:
          type: string
          nullable: true
          title: Meta title [de]
          maxLength: 255
        meta_title_sv:
          type: string
          nullable: true
          title: Meta title [sv]
          maxLength: 255
        meta_title_no:
          type: string
          nullable: true
          title: Meta title [no]
          maxLength: 255
        meta_title_it:
          type: string
          nullable: true
          title: Meta title [it]
          maxLength: 255
        meta_title_es:
          type: string
          nullable: true
          title: Meta title [es]
          maxLength: 255
        meta_description_en:
          type: string
          nullable: true
          title: Meta description [en]
        meta_description_fr:
          type: string
          nullable: true
          title: Meta description [fr]
        meta_description_th:
          type: string
          nullable: true
          title: Meta description [th]
        meta_description_de:
          type: string
          nullable: true
          title: Meta description [de]
        meta_description_sv:
          type: string
          nullable: true
          title: Meta description [sv]
        meta_description_no:
          type: string
          nullable: true
          title: Meta description [no]
        meta_description_it:
          type: string
          nullable: true
          title: Meta description [it]
        meta_description_es:
          type: string
          nullable: true
          title: Meta description [es]
      required:
      - description
      - id
      - name
      - slug
    CreateCart:
      type: object
      properties:
        lines:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderLine'
        user:
          $ref: '#/components/schemas/CreateCartUser'
        send_welcome_email:
          type: boolean
          default: false
        attribution:
          $ref: '#/components/schemas/CreateMarketingAttribution'
        vouchers:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - lines
    CreateCartUser:
      type: object
      properties:
        id:
          type: integer
          nullable: true
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        ip:
          type: string
          nullable: true
          title: Ip address
        phone_number:
          type: string
          nullable: true
          description: 'required : E164'
          maxLength: 32
        language:
          enum:
          - en
          - fr
          - th
          - de
          - sv
          - 'no'
          - it
          - es
          - null
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
            nullable: true
        accepts_marketing:
          type: boolean
          title: Subscribe to Marketing Emails
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
        user_agent:
          type: string
          nullable: true
          maxLength: 500
    CreateMarketingAttribution:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        funnel:
          type: string
          nullable: true
        utm_source:
          type: string
          nullable: true
          maxLength: 128
        utm_medium:
          type: string
          nullable: true
          maxLength: 128
        utm_campaign:
          type: string
          nullable: true
          maxLength: 128
        utm_term:
          type: string
          nullable: true
          maxLength: 256
        utm_content:
          type: string
          nullable: true
          maxLength: 128
        gclid:
          type: string
          nullable: true
          maxLength: 128
        metadata:
          type: object
          additionalProperties: {}
        affiliate:
          type: string
          nullable: true
          maxLength: 128
        subaffiliate1:
          type: string
          nullable: true
          maxLength: 128
        subaffiliate2:
          type: string
          nullable: true
          maxLength: 128
        subaffiliate3:
          type: string
          nullable: true
          maxLength: 128
        subaffiliate4:
          type: string
          nullable: true
          maxLength: 128
        subaffiliate5:
          type: string
          nullable: true
          maxLength: 128
        agent:
          type: integer
          nullable: true
    CreateOrder:
      type: object
      description: |-
        Any transaction that be a part of handle_payment,
            for saving and update status of order
      properties:
        lines:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderLine'
        user:
          $ref: '#/components/schemas/CreateOrderUser'
        send_welcome_email:
          type: boolean
          default: false
        send_receipt:
          type: boolean
          default: true
        shipping_code:
          type: string
          nullable: true
          maxLength: 128
        shipping_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        use_default_shipping_address:
          type: boolean
          default: false
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/ShippingAddress'
          nullable: true
        date_placed:
          type: string
          format: date-time
          nullable: true
        attribution:
          $ref: '#/components/schemas/CreateMarketingAttribution'
        tags:
          type: array
          items:
            type: string
            nullable: true
        payment_method:
          enum:
          - bankcard
          - card_token
          - saved_card
          - apple_pay
          - paypal
          - klarna
          - ideal
          - bancontact
          - giropay
          - null
          type: string
          nullable: true
        payment_details:
          allOf:
          - $ref: '#/components/schemas/PaymentDetail'
          nullable: true
        status:
          enum:
          - pending
          - confirmed
          - completed
          - canceled
          - null
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
        offers:
          type: array
          items:
            type: integer
        vouchers:
          type: array
          items:
            type: string
          nullable: true
        use_default_billing_address:
          type: boolean
          default: false
        billing_same_as_shipping_address:
          type: boolean
          default: false
        billing_address:
          allOf:
          - $ref: '#/components/schemas/BillingAddress'
          nullable: true
      required:
      - lines
    CreateOrderLine:
      type: object
      properties:
        product_id:
          type: integer
        sku:
          type: string
        stockrecord_id:
          type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        currency:
          type: string
          maxLength: 12
        quantity:
          type: integer
          minimum: 1
        subscription:
          $ref: '#/components/schemas/CreateOrderLineSubscription'
        is_upsell:
          type: boolean
          default: false
      required:
      - quantity
    CreateOrderLineSubscription:
      type: object
      properties:
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        interval:
          enum:
          - day
          - month
          type: string
        interval_count:
          type: integer
          minimum: 1
      required:
      - interval
      - interval_count
    CreateOrderNote:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        message:
          type: string
      required:
      - message
    CreateOrderUser:
      type: object
      properties:
        id:
          type: integer
          nullable: true
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        ip:
          type: string
          nullable: true
          title: Ip address
        phone_number:
          type: string
          nullable: true
          description: 'required : E164'
          maxLength: 32
        language:
          enum:
          - en
          - fr
          - th
          - de
          - sv
          - 'no'
          - it
          - es
          - null
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
            nullable: true
        accepts_marketing:
          type: boolean
          title: Subscribe to Marketing Emails
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
        user_agent:
          type: string
          nullable: true
          maxLength: 500
    CreateProduct:
      type: object
      description: Base class shared by admin and public serializer
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
          readOnly: true
        categories:
          type: array
          items:
            type: integer
        recommended_products:
          type: array
          items:
            type: integer
        stockrecords:
          type: array
          items:
            $ref: '#/components/schemas/AdminStockRecord'
        product_class:
          type: integer
          nullable: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        variant_attributes:
          type: array
          items:
            type: string
        structure:
          enum:
          - standalone
          - parent
          - child
          type: string
          title: Product structure
        is_public:
          type: boolean
          description: Show this product in search results and catalogue listings.
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        rating:
          type: number
          format: double
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        is_discountable:
          type: boolean
          title: Is discountable?
          description: This flag indicates if this product can be used in an offer
            or not
        upc:
          type: string
          nullable: true
          description: Universal Product Code (UPC) is an identifier for a product
            which is not specific to a particular  supplier. Eg an ISBN for a book.
          maxLength: 64
        ranking:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The highest ranking are shown first
        external_tax_code:
          type: string
          nullable: true
          title: Tax Code
          description: Tax code to be used with external tax systems such as Avalara,
            TaxJar.
          maxLength: 64
        template:
          type: string
          nullable: true
          title: Theme Template
          description: Use a custom template from your theme to customize the product
            display.
          maxLength: 256
        enable_subscription:
          type: boolean
        interval:
          enum:
          - day
          - month
          - ''
          - null
          type: string
          nullable: true
          title: Subscription Interval
        interval_counts:
          type: array
          items:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
            nullable: true
          nullable: true
          title: Interval Count Options
          description: Choose a predefined value or type to enter custom value(s).
        title:
          type: string
          readOnly: true
        title_en:
          type: string
          nullable: true
          title: Title [en]
          maxLength: 255
        title_fr:
          type: string
          nullable: true
          title: Title [fr]
          maxLength: 255
        title_th:
          type: string
          nullable: true
          title: Title [th]
          maxLength: 255
        title_de:
          type: string
          nullable: true
          title: Title [de]
          maxLength: 255
        title_sv:
          type: string
          nullable: true
          title: Title [sv]
          maxLength: 255
        title_no:
          type: string
          nullable: true
          title: Title [no]
          maxLength: 255
        title_it:
          type: string
          nullable: true
          title: Title [it]
          maxLength: 255
        title_es:
          type: string
          nullable: true
          title: Title [es]
          maxLength: 255
        description:
          type: string
        description_en:
          type: string
          nullable: true
          title: Description [en]
        description_fr:
          type: string
          nullable: true
          title: Description [fr]
        description_th:
          type: string
          nullable: true
          title: Description [th]
        description_de:
          type: string
          nullable: true
          title: Description [de]
        description_sv:
          type: string
          nullable: true
          title: Description [sv]
        description_no:
          type: string
          nullable: true
          title: Description [no]
        description_it:
          type: string
          nullable: true
          title: Description [it]
        description_es:
          type: string
          nullable: true
          title: Description [es]
        meta_title:
          type: string
          nullable: true
          maxLength: 255
        meta_title_en:
          type: string
          nullable: true
          title: Meta title [en]
          maxLength: 255
        meta_title_fr:
          type: string
          nullable: true
          title: Meta title [fr]
          maxLength: 255
        meta_title_th:
          type: string
          nullable: true
          title: Meta title [th]
          maxLength: 255
        meta_title_de:
          type: string
          nullable: true
          title: Meta title [de]
          maxLength: 255
        meta_title_sv:
          type: string
          nullable: true
          title: Meta title [sv]
          maxLength: 255
        meta_title_no:
          type: string
          nullable: true
          title: Meta title [no]
          maxLength: 255
        meta_title_it:
          type: string
          nullable: true
          title: Meta title [it]
          maxLength: 255
        meta_title_es:
          type: string
          nullable: true
          title: Meta title [es]
          maxLength: 255
        meta_description:
          type: string
          nullable: true
        meta_description_en:
          type: string
          nullable: true
          title: Meta description [en]
        meta_description_fr:
          type: string
          nullable: true
          title: Meta description [fr]
        meta_description_th:
          type: string
          nullable: true
          title: Meta description [th]
        meta_description_de:
          type: string
          nullable: true
          title: Meta description [de]
        meta_description_sv:
          type: string
          nullable: true
          title: Meta description [sv]
        meta_description_no:
          type: string
          nullable: true
          title: Meta description [no]
        meta_description_it:
          type: string
          nullable: true
          title: Meta description [it]
        meta_description_es:
          type: string
          nullable: true
          title: Meta description [es]
      required:
      - children
      - date_created
      - date_updated
      - id
      - images
      - rating
      - slug
      - title
      - url
    CreateProductVariant:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        image:
          type: integer
          nullable: true
        variant_attribute_values:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        stockrecords:
          type: array
          items:
            $ref: '#/components/schemas/AdminStockRecord'
      required:
      - variant_attribute_values
    CreateSubscription:
      type: object
      description: |-
        Any transaction that be a part of handle_payment,
            for saving and update status of order
      properties:
        lines:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderLine'
        interval:
          enum:
          - day
          - month
          type: string
        interval_count:
          type: integer
          minimum: 1
        user:
          $ref: '#/components/schemas/CreateOrderUser'
        next_renewal_date:
          type: string
          format: date-time
          description: 'format: YYYY-MM-DDThh:mm:ss #eg. 2021-12-07T12:04:45'
        send_welcome_email:
          type: boolean
          default: false
        shipping_code:
          type: string
          nullable: true
          maxLength: 128
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/ShippingAddress'
          nullable: true
        shipping_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        use_default_shipping_address:
          type: boolean
          default: false
        attribution:
          $ref: '#/components/schemas/CreateMarketingAttribution'
        payment_method:
          enum:
          - card_token
          type: string
        payment_details:
          allOf:
          - $ref: '#/components/schemas/SubscriptionPaymentDetail'
          nullable: true
        use_default_billing_address:
          type: boolean
          default: false
        billing_same_as_shipping_address:
          type: boolean
          default: false
        billing_address:
          allOf:
          - $ref: '#/components/schemas/BillingAddress'
          nullable: true
      required:
      - interval
      - interval_count
      - lines
      - next_renewal_date
      - payment_method
      - user
    CreateTicketComment:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: integer
          nullable: true
        body:
          type: string
          nullable: true
        is_public:
          type: boolean
        attachments:
          type: array
          items:
            type: integer
        from_email:
          type: string
          format: email
          nullable: true
          description: In case user contact from email and user does not in system
            yet.
          maxLength: 254
      required:
      - id
    CreateUpdateStockRecord:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        partner:
          type: integer
        num_in_stock:
          type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        price_currency:
          enum:
          - USD
          - CAD
          - EUR
          type: string
          title: Currency
        partner_sku:
          type: string
          maxLength: 128
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        subscription_max_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_min_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_suggested_downsell_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        price_retail:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
          title: Price (retail)
        num_allocated:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Number allocated
        low_stock_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        sync_stock:
          type: boolean
          description: Sync stock with fulfillment center.
      required:
      - date_created
      - date_updated
      - id
      - partner
      - partner_sku
      - price
      - price_currency
      - product
    CreateUpdateTicket:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        subject:
          type: string
        ticket_type:
          type: integer
          nullable: true
        requester:
          type: integer
          nullable: true
        assignee:
          type: integer
          nullable: true
        priority:
          enum:
          - high
          - medium
          - low
          type: string
        from_email:
          type: string
          format: email
          nullable: true
          description: In case user contact from email and user does not in system
            yet.
          maxLength: 254
        order:
          type: string
          title: Order number
          nullable: true
        products:
          type: array
          items:
            type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        status:
          enum:
          - new
          - open
          - pending
          - solved
          - closed
          type: string
        tags:
          type: array
          items:
            type: string
            nullable: true
        comment:
          allOf:
          - $ref: '#/components/schemas/CreateTicketComment'
          description: An object that adds a comment to the ticket.
      required:
      - created_at
      - id
      - updated_at
    CreateUserNote:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        message:
          type: string
      required:
      - message
    Dispute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          enum:
          - alert
          - chargeback
          type: string
        status:
          enum:
          - new
          - open
          - resolved
          type: string
          readOnly: true
        arn:
          type: string
          nullable: true
          maxLength: 256
        case_number:
          type: string
          nullable: true
          maxLength: 256
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          nullable: true
          title: Dispute Amount
        currency:
          enum:
          - USD
          - CAD
          - ''
          - null
          type: string
          nullable: true
        report_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          readOnly: true
        report_currency:
          type: string
          readOnly: true
        order:
          type: integer
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        transaction:
          type: integer
          nullable: true
        resolution:
          enum:
          - could_not_find_order
          - declined_or_canceled_nothing_to_do
          - issued_full_refund
          - issued_refund_for_remaining_amount
          - 3ds_authorized_successfully
          - previously_refunded_nothing_to_do
          - unable_to_refund_merchant_account_closed
          - won
          - lost
          - other
          - ''
          - null
          type: string
          nullable: true
      required:
      - date_created
      - id
      - order
      - report_amount
      - report_currency
      - status
    LineAttribute:
      type: object
      properties:
        option:
          type: string
          readOnly: true
        value:
          type: string
          maxLength: 255
      required:
      - option
      - value
    MarketingAttribution:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        agent:
          $ref: '#/components/schemas/Agent'
        funnel:
          type: string
          nullable: true
        utm_source:
          type: string
          nullable: true
          maxLength: 128
        utm_medium:
          type: string
          nullable: true
          maxLength: 128
        utm_campaign:
          type: string
          nullable: true
          maxLength: 128
        utm_term:
          type: string
          nullable: true
          maxLength: 256
        utm_content:
          type: string
          nullable: true
          maxLength: 128
        gclid:
          type: string
          nullable: true
          maxLength: 128
        metadata:
          type: object
          additionalProperties: {}
        affiliate:
          type: string
          nullable: true
          maxLength: 128
        subaffiliate1:
          type: string
          nullable: true
          maxLength: 128
        subaffiliate2:
          type: string
          nullable: true
          maxLength: 128
        subaffiliate3:
          type: string
          nullable: true
          maxLength: 128
        subaffiliate4:
          type: string
          nullable: true
          maxLength: 128
        subaffiliate5:
          type: string
          nullable: true
          maxLength: 128
      required:
      - agent
    Order:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        number:
          type: string
          readOnly: true
          title: Order number
        status:
          type: string
          maxLength: 100
        fulfillment_status:
          enum:
          - not_required
          - unfulfilled
          - processing
          - fulfilled
          - delivered
          type: string
        payment_status:
          enum:
          - pending
          - authorized
          - expiring
          - expired
          - paid
          - voided
          - refunded
          - partially_paid
          - partially_refunded
          - partially_voided
          type: string
          readOnly: true
        is_test:
          type: boolean
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
          readOnly: true
        shipping_incl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Shipping charge (inc. tax)
        shipping_method:
          type: string
          readOnly: true
        shipping_code:
          type: string
          readOnly: true
        total_incl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Order total (inc. tax)
        currency:
          type: string
          readOnly: true
        total_excl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Order total (excl. tax)
        shipping_excl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Shipping charge (excl. tax)
        user:
          allOf:
          - $ref: '#/components/schemas/UserInline'
          readOnly: true
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/ShippingAddress'
          nullable: true
        billing_address:
          allOf:
          - $ref: '#/components/schemas/BillingAddress'
          nullable: true
        date_placed:
          type: string
          format: date-time
          readOnly: true
        offer_discounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderOfferDiscount'
          readOnly: true
        voucher_discounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderVoucherOffer'
          readOnly: true
        attribution:
          $ref: '#/components/schemas/MarketingAttribution'
        tags:
          type: array
          items:
            type: string
            nullable: true
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/OrderSubscription'
          readOnly: true
        subscription_lifecycle:
          type: string
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/OrderTransaction'
          readOnly: true
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/OrderShipmentTracking'
          readOnly: true
        total_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        shipping_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        display_taxes:
          type: string
          readOnly: true
        order_status_url:
          type: string
          format: uri
          readOnly: true
        source:
          type: string
          readOnly: true
      required:
      - attribution
      - currency
      - date_placed
      - display_taxes
      - fulfillments
      - is_test
      - lines
      - number
      - offer_discounts
      - order_status_url
      - payment_status
      - shipping_code
      - shipping_excl_tax
      - shipping_incl_tax
      - shipping_method
      - shipping_tax
      - source
      - subscription_lifecycle
      - subscriptions
      - total_excl_tax
      - total_incl_tax
      - total_tax
      - transactions
      - user
      - voucher_discounts
    OrderLine:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductForPresentation'
          readOnly: true
        stockrecord:
          $ref: '#/components/schemas/StockRecordForPresentation'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        price_currency:
          type: string
          maxLength: 12
        price_excl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        price_incl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        price_incl_tax_excl_discounts:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        price_excl_tax_excl_discounts:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        is_upsell:
          type: boolean
        fulfillment_status:
          enum:
          - not_required
          - unfulfilled
          - processing
          - fulfilled
          - delivered
          type: string
      required:
      - id
      - price_currency
      - price_excl_tax
      - price_excl_tax_excl_discounts
      - price_incl_tax
      - price_incl_tax_excl_discounts
      - product
      - stockrecord
    OrderNote:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_created
      - date_updated
      - id
      - message
    OrderOfferDiscount:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
      required:
      - amount
      - description
      - name
    OrderShipmentTracking:
      type: object
      properties:
        carrier:
          type: string
          nullable: true
          maxLength: 256
        tracking_code:
          type: string
          nullable: true
          maxLength: 256
        tracking_link:
          type: string
        lines:
          type: array
          items:
            type: integer
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        reference:
          type: string
      required:
      - date_created
      - lines
    OrderSubscription:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        billing_cycle:
          type: integer
          readOnly: true
      required:
      - billing_cycle
      - id
    OrderTransaction:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        currency:
          type: string
          nullable: true
          maxLength: 6
        status:
          enum:
          - succeeded
          - failed
          - pending
          - canceled
          - expired
          - refunded
          - ''
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        payment_method:
          type: string
          nullable: true
          maxLength: 255
        payment_details:
          allOf:
          - $ref: '#/components/schemas/TransactionPaymentDetail'
          readOnly: true
        response_code:
          type: integer
      required:
      - amount
      - date_created
      - id
      - payment_details
      - response_code
      - type
    OrderVoucher:
      type: object
      properties:
        name:
          type: string
          description: This will be shown in the checkout and basket once the coupon
            is entered
          maxLength: 128
        code:
          type: string
          description: Case insensitive / No spaces allowed
          maxLength: 128
        start_datetime:
          type: string
          format: date-time
        end_datetime:
          type: string
          format: date-time
      required:
      - code
      - end_datetime
      - name
      - start_datetime
    OrderVoucherOffer:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        voucher:
          $ref: '#/components/schemas/OrderVoucher'
      required:
      - amount
      - description
      - name
    OrderWithoutUser:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        number:
          type: string
          readOnly: true
          title: Order number
        status:
          type: string
          maxLength: 100
        fulfillment_status:
          enum:
          - not_required
          - unfulfilled
          - processing
          - fulfilled
          - delivered
          type: string
        payment_status:
          enum:
          - pending
          - authorized
          - expiring
          - expired
          - paid
          - voided
          - refunded
          - partially_paid
          - partially_refunded
          - partially_voided
          type: string
          readOnly: true
        is_test:
          type: boolean
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
          readOnly: true
        shipping_incl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Shipping charge (inc. tax)
        shipping_method:
          type: string
          readOnly: true
        shipping_code:
          type: string
          readOnly: true
        total_incl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Order total (inc. tax)
        currency:
          type: string
          readOnly: true
        total_excl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Order total (excl. tax)
        shipping_excl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Shipping charge (excl. tax)
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/ShippingAddress'
          nullable: true
        billing_address:
          allOf:
          - $ref: '#/components/schemas/BillingAddress'
          nullable: true
        date_placed:
          type: string
          format: date-time
          readOnly: true
        offer_discounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderOfferDiscount'
          readOnly: true
        voucher_discounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderVoucherOffer'
          readOnly: true
        attribution:
          $ref: '#/components/schemas/MarketingAttribution'
        tags:
          type: array
          items:
            type: string
            nullable: true
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/OrderSubscription'
          readOnly: true
        subscription_lifecycle:
          type: string
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/OrderTransaction'
          readOnly: true
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/OrderShipmentTracking'
          readOnly: true
        total_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        shipping_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        display_taxes:
          type: string
          readOnly: true
        order_status_url:
          type: string
          format: uri
          readOnly: true
        source:
          type: string
          readOnly: true
      required:
      - attribution
      - currency
      - date_placed
      - display_taxes
      - fulfillments
      - is_test
      - lines
      - number
      - offer_discounts
      - order_status_url
      - payment_status
      - shipping_code
      - shipping_excl_tax
      - shipping_incl_tax
      - shipping_method
      - shipping_tax
      - source
      - subscription_lifecycle
      - subscriptions
      - total_excl_tax
      - total_incl_tax
      - total_tax
      - transactions
      - voucher_discounts
    PaginatedCartList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedDisputeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Dispute'
    PaginatedOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedPartnerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Partner'
    PaginatedProductListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductList'
    PaginatedStockRecordList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/StockRecord'
    PaginatedSubscriptionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    PaginatedTicketList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
    PaginatedTicketTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/TicketType'
    PaginatedTransactionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedWebhookList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
    Partner:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        address:
          $ref: '#/components/schemas/PartnerAddress'
        processing_by:
          enum:
          - ''
          - manual
          - shipstation
          type: string
        name:
          type: string
          maxLength: 128
        enable_cod:
          type: boolean
      required:
      - address
      - id
      - processing_by
    PartnerAddress:
      type: object
      properties:
        line1:
          type: string
          title: First line of address
          maxLength: 255
        line2:
          type: string
          title: Second line of address
          maxLength: 255
        line3:
          type: string
          title: Third line of address
          maxLength: 255
        line4:
          type: string
          title: City
          maxLength: 255
        state:
          type: string
          title: State/County
          maxLength: 255
        postcode:
          type: string
          title: Post/Zip-code
          maxLength: 64
        country:
          type: string
          title: ISO 3166-1 alpha-2
      required:
      - country
      - line1
    PatchedCreateUpdateTicket:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        subject:
          type: string
        ticket_type:
          type: integer
          nullable: true
        requester:
          type: integer
          nullable: true
        assignee:
          type: integer
          nullable: true
        priority:
          enum:
          - high
          - medium
          - low
          type: string
        from_email:
          type: string
          format: email
          nullable: true
          description: In case user contact from email and user does not in system
            yet.
          maxLength: 254
        order:
          type: string
          title: Order number
          nullable: true
        products:
          type: array
          items:
            type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        status:
          enum:
          - new
          - open
          - pending
          - solved
          - closed
          type: string
        tags:
          type: array
          items:
            type: string
            nullable: true
        comment:
          allOf:
          - $ref: '#/components/schemas/CreateTicketComment'
          description: An object that adds a comment to the ticket.
    PatchedDispute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          enum:
          - alert
          - chargeback
          type: string
        status:
          enum:
          - new
          - open
          - resolved
          type: string
          readOnly: true
        arn:
          type: string
          nullable: true
          maxLength: 256
        case_number:
          type: string
          nullable: true
          maxLength: 256
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          nullable: true
          title: Dispute Amount
        currency:
          enum:
          - USD
          - CAD
          - ''
          - null
          type: string
          nullable: true
        report_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          readOnly: true
        report_currency:
          type: string
          readOnly: true
        order:
          type: integer
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        transaction:
          type: integer
          nullable: true
        resolution:
          enum:
          - could_not_find_order
          - declined_or_canceled_nothing_to_do
          - issued_full_refund
          - issued_refund_for_remaining_amount
          - 3ds_authorized_successfully
          - previously_refunded_nothing_to_do
          - unable_to_refund_merchant_account_closed
          - won
          - lost
          - other
          - ''
          - null
          type: string
          nullable: true
    PatchedStockRecord:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/StockRecordProduct'
          readOnly: true
        partner:
          allOf:
          - $ref: '#/components/schemas/StockRecordPartner'
          readOnly: true
        net_stock_level:
          type: integer
          readOnly: true
        partner_sku:
          type: string
          maxLength: 128
        price_currency:
          type: string
          readOnly: true
          title: Currency
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        subscription_max_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_min_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_suggested_downsell_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        price_retail:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
          title: Price (retail)
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        num_in_stock:
          type: integer
          readOnly: true
          title: Number in stock
        num_allocated:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Number allocated
        low_stock_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        sync_stock:
          type: boolean
          description: Sync stock with fulfillment center.
    PatchedUpdateOrder:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        number:
          type: string
          readOnly: true
          title: Order number
        status:
          type: string
          maxLength: 100
        fulfillment_status:
          enum:
          - not_required
          - unfulfilled
          - processing
          - fulfilled
          - delivered
          type: string
        payment_status:
          enum:
          - pending
          - authorized
          - expiring
          - expired
          - paid
          - voided
          - refunded
          - partially_paid
          - partially_refunded
          - partially_voided
          type: string
          readOnly: true
        is_test:
          type: boolean
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
          readOnly: true
        shipping_incl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Shipping charge (inc. tax)
        shipping_method:
          type: string
          readOnly: true
        shipping_code:
          type: string
          readOnly: true
        total_incl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Order total (inc. tax)
        currency:
          type: string
          readOnly: true
        total_excl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Order total (excl. tax)
        shipping_excl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Shipping charge (excl. tax)
        user:
          allOf:
          - $ref: '#/components/schemas/UserInline'
          readOnly: true
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/ShippingAddress'
          nullable: true
        billing_address:
          allOf:
          - $ref: '#/components/schemas/BillingAddress'
          nullable: true
        date_placed:
          type: string
          format: date-time
          readOnly: true
        offer_discounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderOfferDiscount'
          readOnly: true
        voucher_discounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderVoucherOffer'
          readOnly: true
        attribution:
          $ref: '#/components/schemas/CreateMarketingAttribution'
        tags:
          type: array
          items:
            type: string
            nullable: true
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/OrderSubscription'
          readOnly: true
        subscription_lifecycle:
          type: string
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/OrderTransaction'
          readOnly: true
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/OrderShipmentTracking'
          readOnly: true
        total_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        shipping_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        display_taxes:
          type: string
          readOnly: true
        order_status_url:
          type: string
          format: uri
          readOnly: true
        source:
          type: string
          readOnly: true
    PatchedUpdateProduct:
      type: object
      description: Base class shared by admin and public serializer
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
          readOnly: true
        categories:
          type: array
          items:
            type: integer
        recommended_products:
          type: array
          items:
            type: integer
        stockrecords:
          type: array
          items:
            $ref: '#/components/schemas/AdminStockRecord'
        product_class:
          type: integer
          nullable: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        variant_attributes:
          type: array
          items:
            type: string
        structure:
          enum:
          - standalone
          - parent
          - child
          type: string
          title: Product structure
        is_public:
          type: boolean
          description: Show this product in search results and catalogue listings.
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        rating:
          type: number
          format: double
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        is_discountable:
          type: boolean
          title: Is discountable?
          description: This flag indicates if this product can be used in an offer
            or not
        upc:
          type: string
          nullable: true
          description: Universal Product Code (UPC) is an identifier for a product
            which is not specific to a particular  supplier. Eg an ISBN for a book.
          maxLength: 64
        ranking:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The highest ranking are shown first
        external_tax_code:
          type: string
          nullable: true
          title: Tax Code
          description: Tax code to be used with external tax systems such as Avalara,
            TaxJar.
          maxLength: 64
        template:
          type: string
          nullable: true
          title: Theme Template
          description: Use a custom template from your theme to customize the product
            display.
          maxLength: 256
        enable_subscription:
          type: boolean
        interval:
          enum:
          - day
          - month
          - ''
          - null
          type: string
          nullable: true
          title: Subscription Interval
        interval_counts:
          type: array
          items:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
            nullable: true
          nullable: true
          title: Interval Count Options
          description: Choose a predefined value or type to enter custom value(s).
        title:
          type: string
          readOnly: true
        title_en:
          type: string
          nullable: true
          title: Title [en]
          maxLength: 255
        title_fr:
          type: string
          nullable: true
          title: Title [fr]
          maxLength: 255
        title_th:
          type: string
          nullable: true
          title: Title [th]
          maxLength: 255
        title_de:
          type: string
          nullable: true
          title: Title [de]
          maxLength: 255
        title_sv:
          type: string
          nullable: true
          title: Title [sv]
          maxLength: 255
        title_no:
          type: string
          nullable: true
          title: Title [no]
          maxLength: 255
        title_it:
          type: string
          nullable: true
          title: Title [it]
          maxLength: 255
        title_es:
          type: string
          nullable: true
          title: Title [es]
          maxLength: 255
        description:
          type: string
        description_en:
          type: string
          nullable: true
          title: Description [en]
        description_fr:
          type: string
          nullable: true
          title: Description [fr]
        description_th:
          type: string
          nullable: true
          title: Description [th]
        description_de:
          type: string
          nullable: true
          title: Description [de]
        description_sv:
          type: string
          nullable: true
          title: Description [sv]
        description_no:
          type: string
          nullable: true
          title: Description [no]
        description_it:
          type: string
          nullable: true
          title: Description [it]
        description_es:
          type: string
          nullable: true
          title: Description [es]
        meta_title:
          type: string
          nullable: true
          maxLength: 255
        meta_title_en:
          type: string
          nullable: true
          title: Meta title [en]
          maxLength: 255
        meta_title_fr:
          type: string
          nullable: true
          title: Meta title [fr]
          maxLength: 255
        meta_title_th:
          type: string
          nullable: true
          title: Meta title [th]
          maxLength: 255
        meta_title_de:
          type: string
          nullable: true
          title: Meta title [de]
          maxLength: 255
        meta_title_sv:
          type: string
          nullable: true
          title: Meta title [sv]
          maxLength: 255
        meta_title_no:
          type: string
          nullable: true
          title: Meta title [no]
          maxLength: 255
        meta_title_it:
          type: string
          nullable: true
          title: Meta title [it]
          maxLength: 255
        meta_title_es:
          type: string
          nullable: true
          title: Meta title [es]
          maxLength: 255
        meta_description:
          type: string
          nullable: true
        meta_description_en:
          type: string
          nullable: true
          title: Meta description [en]
        meta_description_fr:
          type: string
          nullable: true
          title: Meta description [fr]
        meta_description_th:
          type: string
          nullable: true
          title: Meta description [th]
        meta_description_de:
          type: string
          nullable: true
          title: Meta description [de]
        meta_description_sv:
          type: string
          nullable: true
          title: Meta description [sv]
        meta_description_no:
          type: string
          nullable: true
          title: Meta description [no]
        meta_description_it:
          type: string
          nullable: true
          title: Meta description [it]
        meta_description_es:
          type: string
          nullable: true
          title: Meta description [es]
    PatchedUpdateProductVariant:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        image:
          type: integer
          nullable: true
        variant_attribute_values:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        stockrecords:
          type: array
          items:
            $ref: '#/components/schemas/AdminStockRecord'
    PatchedUpdateSubscription:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        interval:
          enum:
          - day
          - month
          type: string
        interval_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        status:
          enum:
          - active
          - pending
          - past_due
          - canceled
          - retrying
          type: string
        currency:
          type: string
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserInline'
          readOnly: true
        shipping_code:
          enum:
          - default
          - no-shipping-required
          type: string
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/ShippingAddress'
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        next_renewal_date:
          type: string
          format: date-time
          nullable: true
        cancel_reason:
          type: string
          readOnly: true
        num_lines:
          type: integer
          readOnly: true
        frequency:
          type: string
          readOnly: true
        num_orders:
          type: integer
          readOnly: true
        shipping_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
          nullable: true
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        is_tax_known:
          type: boolean
          readOnly: true
        payment_method:
          type: string
          readOnly: true
        payment_details:
          allOf:
          - $ref: '#/components/schemas/SubscriptionPaymentDetail'
          nullable: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionLine'
          readOnly: true
        orders:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionOrder'
          readOnly: true
        billing_address:
          allOf:
          - $ref: '#/components/schemas/BillingAddress'
          nullable: true
        attribution:
          $ref: '#/components/schemas/CreateMarketingAttribution'
    PatchedUser:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        ip:
          type: string
          nullable: true
          title: Ip address
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        date_joined:
          type: string
          format: date-time
          readOnly: true
        language:
          enum:
          - en
          - fr
          - th
          - de
          - sv
          - 'no'
          - it
          - es
          type: string
          default: en
          description: 'required : E164'
        is_blocked:
          type: boolean
          default: false
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/UserAddress'
          readOnly: true
        orders_count:
          type: integer
          readOnly: true
          default: 0
        subscriptions_count:
          type: integer
          readOnly: true
        total_spent:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          default: '0.00'
        user_type:
          type: string
          enum:
          - customer
          - lead
          - dashboard
          readOnly: true
          description: 'Available values : customer, lead, dashboard'
        tags:
          type: array
          items:
            type: string
            nullable: true
        accepts_marketing:
          type: boolean
          title: Subscribe to Marketing Emails
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
        user_agent:
          type: string
          nullable: true
          maxLength: 500
    PatchedWebhook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        events:
          type: array
          items:
            type: string
            nullable: true
          description: See dashboard for webhooks for available events.
        secret_key:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          nullable: true
          title: Webhook Name
          maxLength: 255
        target:
          type: string
          format: uri
          title: Webhook target
          description: Full url for your webhook receiver endpoint.
          maxLength: 255
        active:
          type: boolean
        next_check_date:
          type: string
          format: date-time
          readOnly: true
        warning_count:
          type: integer
          readOnly: true
        api_version:
          type: string
          nullable: true
          maxLength: 64
    PaymentDetail:
      type: object
      properties:
        card_name:
          type: string
          nullable: true
        card_number:
          type: string
          nullable: true
        card_cvv:
          type: string
          nullable: true
        card_expiry_month:
          type: integer
          maximum: 12
          minimum: 1
          nullable: true
        card_expiry_year:
          type: integer
          nullable: true
        card_token:
          type: string
          nullable: true
        reference_transaction_id:
          type: string
          nullable: true
        payment_gateway:
          type: integer
          nullable: true
        payment_gateway_group:
          type: integer
          nullable: true
        save_card:
          type: boolean
          default: true
        payment_return_url:
          type: string
          format: uri
          nullable: true
        authorize_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        recache_card_cvv:
          type: integer
          nullable: true
        paypal_account:
          type: integer
          nullable: true
    Product:
      type: object
      description: Base class shared by admin and public serializer
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
          readOnly: true
        recommended_products:
          type: array
          items:
            type: integer
        stockrecords:
          type: array
          items:
            $ref: '#/components/schemas/AdminStockRecord'
        product_class:
          type: integer
          nullable: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        variant_attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
        structure:
          enum:
          - standalone
          - parent
          - child
          type: string
          title: Product structure
        is_public:
          type: boolean
          description: Show this product in search results and catalogue listings.
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        rating:
          type: number
          format: double
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        is_discountable:
          type: boolean
          title: Is discountable?
          description: This flag indicates if this product can be used in an offer
            or not
        upc:
          type: string
          nullable: true
          description: Universal Product Code (UPC) is an identifier for a product
            which is not specific to a particular  supplier. Eg an ISBN for a book.
          maxLength: 64
        ranking:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The highest ranking are shown first
        external_tax_code:
          type: string
          nullable: true
          title: Tax Code
          description: Tax code to be used with external tax systems such as Avalara,
            TaxJar.
          maxLength: 64
        template:
          type: string
          nullable: true
          title: Theme Template
          description: Use a custom template from your theme to customize the product
            display.
          maxLength: 256
        enable_subscription:
          type: boolean
        interval:
          enum:
          - day
          - month
          - ''
          - null
          type: string
          nullable: true
          title: Subscription Interval
        interval_counts:
          type: array
          items:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
            nullable: true
          nullable: true
          title: Interval Count Options
          description: Choose a predefined value or type to enter custom value(s).
        title:
          type: string
          readOnly: true
        title_en:
          type: string
          nullable: true
          title: Title [en]
          maxLength: 255
        title_fr:
          type: string
          nullable: true
          title: Title [fr]
          maxLength: 255
        title_th:
          type: string
          nullable: true
          title: Title [th]
          maxLength: 255
        title_de:
          type: string
          nullable: true
          title: Title [de]
          maxLength: 255
        title_sv:
          type: string
          nullable: true
          title: Title [sv]
          maxLength: 255
        title_no:
          type: string
          nullable: true
          title: Title [no]
          maxLength: 255
        title_it:
          type: string
          nullable: true
          title: Title [it]
          maxLength: 255
        title_es:
          type: string
          nullable: true
          title: Title [es]
          maxLength: 255
        description:
          type: string
        description_en:
          type: string
          nullable: true
          title: Description [en]
        description_fr:
          type: string
          nullable: true
          title: Description [fr]
        description_th:
          type: string
          nullable: true
          title: Description [th]
        description_de:
          type: string
          nullable: true
          title: Description [de]
        description_sv:
          type: string
          nullable: true
          title: Description [sv]
        description_no:
          type: string
          nullable: true
          title: Description [no]
        description_it:
          type: string
          nullable: true
          title: Description [it]
        description_es:
          type: string
          nullable: true
          title: Description [es]
        meta_title:
          type: string
          nullable: true
          maxLength: 255
        meta_title_en:
          type: string
          nullable: true
          title: Meta title [en]
          maxLength: 255
        meta_title_fr:
          type: string
          nullable: true
          title: Meta title [fr]
          maxLength: 255
        meta_title_th:
          type: string
          nullable: true
          title: Meta title [th]
          maxLength: 255
        meta_title_de:
          type: string
          nullable: true
          title: Meta title [de]
          maxLength: 255
        meta_title_sv:
          type: string
          nullable: true
          title: Meta title [sv]
          maxLength: 255
        meta_title_no:
          type: string
          nullable: true
          title: Meta title [no]
          maxLength: 255
        meta_title_it:
          type: string
          nullable: true
          title: Meta title [it]
          maxLength: 255
        meta_title_es:
          type: string
          nullable: true
          title: Meta title [es]
          maxLength: 255
        meta_description:
          type: string
          nullable: true
        meta_description_en:
          type: string
          nullable: true
          title: Meta description [en]
        meta_description_fr:
          type: string
          nullable: true
          title: Meta description [fr]
        meta_description_th:
          type: string
          nullable: true
          title: Meta description [th]
        meta_description_de:
          type: string
          nullable: true
          title: Meta description [de]
        meta_description_sv:
          type: string
          nullable: true
          title: Meta description [sv]
        meta_description_no:
          type: string
          nullable: true
          title: Meta description [no]
        meta_description_it:
          type: string
          nullable: true
          title: Meta description [it]
        meta_description_es:
          type: string
          nullable: true
          title: Meta description [es]
      required:
      - categories
      - children
      - date_created
      - date_updated
      - id
      - images
      - rating
      - slug
      - title
      - url
    ProductAttribute:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        option_group:
          allOf:
          - $ref: '#/components/schemas/AttributeOptionGroup'
          nullable: true
        name:
          type: string
          maxLength: 128
        code:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
          maxLength: 128
        type:
          enum:
          - text
          - integer
          - boolean
          - float
          - richtext
          - date
          - datetime
          - option
          - multi_option
          - file
          - image
          type: string
        required:
          type: boolean
      required:
      - code
      - name
    ProductAttributeValue:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        value: {}
        code:
          type: string
          readOnly: true
      required:
      - code
      - id
      - name
      - value
    ProductCategory:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - slug
    ProductForPresentation:
      type: object
      description: Base class shared by admin and public serializer
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        title:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
          readOnly: true
        product_class:
          type: integer
          nullable: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        upc:
          type: string
          nullable: true
          description: Universal Product Code (UPC) is an identifier for a product
            which is not specific to a particular  supplier. Eg an ISBN for a book.
          maxLength: 64
      required:
      - categories
      - id
      - images
      - title
      - url
    ProductImage:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        original:
          type: string
          format: uri
        caption:
          type: string
          maxLength: 200
        display_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: An image with a display order of zero will be the primary image
            for a product
        product:
          type: integer
      required:
      - id
      - original
      - product
    ProductList:
      type: object
      description: Base class shared by admin and public serializer
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
          readOnly: true
        product_class:
          type: integer
          nullable: true
        recommended_products:
          type: array
          items:
            type: integer
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
          readOnly: true
        structure:
          enum:
          - standalone
          - parent
          - child
          type: string
          title: Product structure
        is_public:
          type: boolean
          description: Show this product in search results and catalogue listings.
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        rating:
          type: number
          format: double
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        is_discountable:
          type: boolean
          title: Is discountable?
          description: This flag indicates if this product can be used in an offer
            or not
        upc:
          type: string
          nullable: true
          description: Universal Product Code (UPC) is an identifier for a product
            which is not specific to a particular  supplier. Eg an ISBN for a book.
          maxLength: 64
        ranking:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The highest ranking are shown first
        external_tax_code:
          type: string
          nullable: true
          title: Tax Code
          description: Tax code to be used with external tax systems such as Avalara,
            TaxJar.
          maxLength: 64
        variant_attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
        url:
          type: string
          format: uri
          readOnly: true
        stockrecords:
          type: array
          items:
            $ref: '#/components/schemas/AdminStockRecord'
        enable_subscription:
          type: boolean
        interval:
          enum:
          - day
          - month
          - ''
          - null
          type: string
          nullable: true
          title: Subscription Interval
        interval_counts:
          type: array
          items:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
            nullable: true
          nullable: true
          title: Interval Count Options
          description: Choose a predefined value or type to enter custom value(s).
      required:
      - categories
      - children
      - date_created
      - date_updated
      - id
      - images
      - rating
      - slug
      - title
      - url
    ProductVariant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product_id:
          type: integer
        title:
          type: string
          readOnly: true
        structure:
          enum:
          - standalone
          - parent
          - child
          type: string
          title: Product structure
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        variant_attribute_values:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        stockrecords:
          type: array
          items:
            $ref: '#/components/schemas/AdminStockRecord'
      required:
      - id
      - images
      - product_id
      - title
    RefundOrder:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        send_refund_notification:
          type: boolean
          default: true
      required:
      - amount
    RefundTransaction:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        send_refund_notification:
          type: boolean
          default: true
      required:
      - amount
    ShippingAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        country:
          type: string
          title: ISO 3166-1 alpha-2
        title:
          enum:
          - Mr
          - Miss
          - Mrs
          - Ms
          - Dr
          - ''
          type: string
        line1:
          type: string
          title: First line of address
          maxLength: 255
        line2:
          type: string
          title: Second line of address
          maxLength: 255
        line3:
          type: string
          title: Third line of address
          maxLength: 255
        postcode:
          type: string
          title: Post/Zip-code
          maxLength: 64
        phone_number:
          type: string
          maxLength: 128
        notes:
          type: string
          title: Instructions
          description: Tell us anything we should know when delivering your order.
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        line4:
          type: string
          title: City
          maxLength: 255
        state:
          type: string
          title: State/Province
          maxLength: 255
      required:
      - country
      - first_name
      - id
      - last_name
      - line1
      - line4
    StockRecord:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/StockRecordProduct'
          readOnly: true
        partner:
          allOf:
          - $ref: '#/components/schemas/StockRecordPartner'
          readOnly: true
        net_stock_level:
          type: integer
          readOnly: true
        partner_sku:
          type: string
          maxLength: 128
        price_currency:
          type: string
          readOnly: true
          title: Currency
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        subscription_max_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_min_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_suggested_downsell_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        subscription_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        price_retail:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
          title: Price (retail)
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        num_in_stock:
          type: integer
          readOnly: true
          title: Number in stock
        num_allocated:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Number allocated
        low_stock_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        sync_stock:
          type: boolean
          description: Sync stock with fulfillment center.
      required:
      - date_created
      - date_updated
      - id
      - net_stock_level
      - num_in_stock
      - partner
      - partner_sku
      - price
      - price_currency
      - product
    StockRecordForPresentation:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        partner_sku:
          type: string
          maxLength: 128
        price_currency:
          type: string
          title: Currency
          maxLength: 12
        price_retail:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
          title: Price (retail)
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        num_in_stock:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Number in stock
        num_allocated:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Number allocated
        low_stock_threshold:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
      required:
      - id
      - partner_sku
    StockRecordPartner:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        code:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - code
      - id
    StockRecordProduct:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
      required:
      - id
    Subscription:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        interval:
          enum:
          - day
          - month
          type: string
        interval_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        status:
          enum:
          - active
          - pending
          - past_due
          - canceled
          - retrying
          type: string
        currency:
          type: string
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserInline'
          readOnly: true
        shipping_code:
          type: string
          maxLength: 128
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/ShippingAddress'
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        next_renewal_date:
          type: string
          format: date-time
          nullable: true
        cancel_reason:
          type: string
          readOnly: true
        num_lines:
          type: integer
          readOnly: true
        frequency:
          type: string
          readOnly: true
        num_orders:
          type: integer
          readOnly: true
        shipping_price:
          type: string
          readOnly: true
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        is_tax_known:
          type: boolean
          readOnly: true
        payment_method:
          type: string
          readOnly: true
        payment_details:
          type: object
          additionalProperties: {}
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionLine'
          readOnly: true
        orders:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionOrder'
          readOnly: true
        billing_address:
          allOf:
          - $ref: '#/components/schemas/BillingAddress'
          nullable: true
        attribution:
          $ref: '#/components/schemas/MarketingAttribution'
      required:
      - attribution
      - cancel_reason
      - currency
      - date_created
      - frequency
      - id
      - interval_count
      - is_tax_known
      - lines
      - num_lines
      - num_orders
      - orders
      - payment_details
      - payment_method
      - shipping_price
      - total
      - user
    SubscriptionLine:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          $ref: '#/components/schemas/ProductForPresentation'
        stockrecord:
          $ref: '#/components/schemas/StockRecordForPresentation'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
      required:
      - id
      - price
      - product
      - stockrecord
    SubscriptionOrder:
      type: object
      properties:
        billing_cycle:
          type: integer
          readOnly: true
        order_number:
          type: string
          readOnly: true
      required:
      - billing_cycle
      - order_number
    SubscriptionPaymentDetail:
      type: object
      properties:
        card_token:
          type: string
          nullable: true
        payment_gateway:
          type: integer
          nullable: true
        recache_card_cvv:
          type: integer
          nullable: true
    Ticket:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        subject:
          type: string
        ticket_type:
          type: integer
          nullable: true
        requester:
          type: integer
          nullable: true
        assignee:
          type: integer
          nullable: true
        priority:
          enum:
          - high
          - medium
          - low
          type: string
        from_email:
          type: string
          format: email
          nullable: true
          description: In case user contact from email and user does not in system
            yet.
          maxLength: 254
        order:
          type: string
          title: Order number
          readOnly: true
        products:
          type: array
          items:
            type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        channel:
          enum:
          - customer_account
          - dashboard
          - email
          - api
          type: string
        status:
          enum:
          - new
          - open
          - pending
          - solved
          - closed
          type: string
        tags:
          type: array
          items:
            type: string
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/TicketComment'
      required:
      - comments
      - created_at
      - id
      - order
      - tags
      - updated_at
    TicketComment:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: integer
          nullable: true
        body:
          type: string
          nullable: true
        is_public:
          type: boolean
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        from_email:
          type: string
          format: email
          nullable: true
          description: In case user contact from email and user does not in system
            yet.
          maxLength: 254
        created_at:
          type: string
          format: date-time
      required:
      - attachments
      - id
    TicketType:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
      required:
      - id
      - name
    Transaction:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        currency:
          type: string
          nullable: true
          maxLength: 6
        status:
          enum:
          - succeeded
          - failed
          - pending
          - canceled
          - expired
          - refunded
          - ''
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        payment_method:
          type: string
          nullable: true
          maxLength: 255
        payment_details:
          allOf:
          - $ref: '#/components/schemas/TransactionPaymentDetail'
          readOnly: true
        response_code:
          type: integer
        attribution:
          allOf:
          - $ref: '#/components/schemas/MarketingAttribution'
          readOnly: true
        order:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/UserInline'
        subscriptions:
          readOnly: true
        initiator:
          allOf:
          - $ref: '#/components/schemas/Agent'
          readOnly: true
      required:
      - amount
      - attribution
      - date_created
      - id
      - initiator
      - order
      - payment_details
      - response_code
      - subscriptions
      - type
      - user
    TransactionPaymentDetail:
      type: object
      properties:
        gateway:
          $ref: '#/components/schemas/TransactionPaymentDetailGateway'
        bankcard_first_six:
          type: string
        bankcard_last_four:
          type: string
        is_3ds:
          type: boolean
        optimized_3ds:
          type: boolean
        downgrade_3ds_retry:
          type: boolean
        sca_flow:
          type: string
        partner_transaction_id:
          type: string
        card_token:
          type: string
      required:
      - bankcard_first_six
      - bankcard_last_four
      - card_token
      - downgrade_3ds_retry
      - gateway
      - is_3ds
      - optimized_3ds
      - partner_transaction_id
      - sca_flow
    TransactionPaymentDetailGateway:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        name:
          type: string
      required:
      - id
      - name
      - type
    UpdateCart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderLine'
        attribution:
          $ref: '#/components/schemas/CreateMarketingAttribution'
        vouchers:
          type: array
          items:
            type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - id
      - lines
    UpdateOrder:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        number:
          type: string
          readOnly: true
          title: Order number
        status:
          type: string
          maxLength: 100
        fulfillment_status:
          enum:
          - not_required
          - unfulfilled
          - processing
          - fulfilled
          - delivered
          type: string
        payment_status:
          enum:
          - pending
          - authorized
          - expiring
          - expired
          - paid
          - voided
          - refunded
          - partially_paid
          - partially_refunded
          - partially_voided
          type: string
          readOnly: true
        is_test:
          type: boolean
          readOnly: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
          readOnly: true
        shipping_incl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Shipping charge (inc. tax)
        shipping_method:
          type: string
          readOnly: true
        shipping_code:
          type: string
          readOnly: true
        total_incl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Order total (inc. tax)
        currency:
          type: string
          readOnly: true
        total_excl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Order total (excl. tax)
        shipping_excl_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          title: Shipping charge (excl. tax)
        user:
          allOf:
          - $ref: '#/components/schemas/UserInline'
          readOnly: true
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/ShippingAddress'
          nullable: true
        billing_address:
          allOf:
          - $ref: '#/components/schemas/BillingAddress'
          nullable: true
        date_placed:
          type: string
          format: date-time
          readOnly: true
        offer_discounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderOfferDiscount'
          readOnly: true
        voucher_discounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderVoucherOffer'
          readOnly: true
        attribution:
          $ref: '#/components/schemas/CreateMarketingAttribution'
        tags:
          type: array
          items:
            type: string
            nullable: true
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/OrderSubscription'
          readOnly: true
        subscription_lifecycle:
          type: string
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/OrderTransaction'
          readOnly: true
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/OrderShipmentTracking'
          readOnly: true
        total_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        shipping_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        display_taxes:
          type: string
          readOnly: true
        order_status_url:
          type: string
          format: uri
          readOnly: true
        source:
          type: string
          readOnly: true
      required:
      - currency
      - date_placed
      - display_taxes
      - fulfillments
      - is_test
      - lines
      - number
      - offer_discounts
      - order_status_url
      - payment_status
      - shipping_code
      - shipping_excl_tax
      - shipping_incl_tax
      - shipping_method
      - shipping_tax
      - source
      - subscription_lifecycle
      - subscriptions
      - total_excl_tax
      - total_incl_tax
      - total_tax
      - transactions
      - user
      - voucher_discounts
    UpdateProduct:
      type: object
      description: Base class shared by admin and public serializer
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
          readOnly: true
        categories:
          type: array
          items:
            type: integer
        recommended_products:
          type: array
          items:
            type: integer
        stockrecords:
          type: array
          items:
            $ref: '#/components/schemas/AdminStockRecord'
        product_class:
          type: integer
          nullable: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        variant_attributes:
          type: array
          items:
            type: string
        structure:
          enum:
          - standalone
          - parent
          - child
          type: string
          title: Product structure
        is_public:
          type: boolean
          description: Show this product in search results and catalogue listings.
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        rating:
          type: number
          format: double
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        is_discountable:
          type: boolean
          title: Is discountable?
          description: This flag indicates if this product can be used in an offer
            or not
        upc:
          type: string
          nullable: true
          description: Universal Product Code (UPC) is an identifier for a product
            which is not specific to a particular  supplier. Eg an ISBN for a book.
          maxLength: 64
        ranking:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The highest ranking are shown first
        external_tax_code:
          type: string
          nullable: true
          title: Tax Code
          description: Tax code to be used with external tax systems such as Avalara,
            TaxJar.
          maxLength: 64
        template:
          type: string
          nullable: true
          title: Theme Template
          description: Use a custom template from your theme to customize the product
            display.
          maxLength: 256
        enable_subscription:
          type: boolean
        interval:
          enum:
          - day
          - month
          - ''
          - null
          type: string
          nullable: true
          title: Subscription Interval
        interval_counts:
          type: array
          items:
            type: integer
            maximum: 2147483647
            minimum: -2147483648
            nullable: true
          nullable: true
          title: Interval Count Options
          description: Choose a predefined value or type to enter custom value(s).
        title:
          type: string
          readOnly: true
        title_en:
          type: string
          nullable: true
          title: Title [en]
          maxLength: 255
        title_fr:
          type: string
          nullable: true
          title: Title [fr]
          maxLength: 255
        title_th:
          type: string
          nullable: true
          title: Title [th]
          maxLength: 255
        title_de:
          type: string
          nullable: true
          title: Title [de]
          maxLength: 255
        title_sv:
          type: string
          nullable: true
          title: Title [sv]
          maxLength: 255
        title_no:
          type: string
          nullable: true
          title: Title [no]
          maxLength: 255
        title_it:
          type: string
          nullable: true
          title: Title [it]
          maxLength: 255
        title_es:
          type: string
          nullable: true
          title: Title [es]
          maxLength: 255
        description:
          type: string
        description_en:
          type: string
          nullable: true
          title: Description [en]
        description_fr:
          type: string
          nullable: true
          title: Description [fr]
        description_th:
          type: string
          nullable: true
          title: Description [th]
        description_de:
          type: string
          nullable: true
          title: Description [de]
        description_sv:
          type: string
          nullable: true
          title: Description [sv]
        description_no:
          type: string
          nullable: true
          title: Description [no]
        description_it:
          type: string
          nullable: true
          title: Description [it]
        description_es:
          type: string
          nullable: true
          title: Description [es]
        meta_title:
          type: string
          nullable: true
          maxLength: 255
        meta_title_en:
          type: string
          nullable: true
          title: Meta title [en]
          maxLength: 255
        meta_title_fr:
          type: string
          nullable: true
          title: Meta title [fr]
          maxLength: 255
        meta_title_th:
          type: string
          nullable: true
          title: Meta title [th]
          maxLength: 255
        meta_title_de:
          type: string
          nullable: true
          title: Meta title [de]
          maxLength: 255
        meta_title_sv:
          type: string
          nullable: true
          title: Meta title [sv]
          maxLength: 255
        meta_title_no:
          type: string
          nullable: true
          title: Meta title [no]
          maxLength: 255
        meta_title_it:
          type: string
          nullable: true
          title: Meta title [it]
          maxLength: 255
        meta_title_es:
          type: string
          nullable: true
          title: Meta title [es]
          maxLength: 255
        meta_description:
          type: string
          nullable: true
        meta_description_en:
          type: string
          nullable: true
          title: Meta description [en]
        meta_description_fr:
          type: string
          nullable: true
          title: Meta description [fr]
        meta_description_th:
          type: string
          nullable: true
          title: Meta description [th]
        meta_description_de:
          type: string
          nullable: true
          title: Meta description [de]
        meta_description_sv:
          type: string
          nullable: true
          title: Meta description [sv]
        meta_description_no:
          type: string
          nullable: true
          title: Meta description [no]
        meta_description_it:
          type: string
          nullable: true
          title: Meta description [it]
        meta_description_es:
          type: string
          nullable: true
          title: Meta description [es]
      required:
      - children
      - date_created
      - date_updated
      - id
      - images
      - rating
      - slug
      - title
      - url
    UpdateProductVariant:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        image:
          type: integer
          nullable: true
        variant_attribute_values:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        stockrecords:
          type: array
          items:
            $ref: '#/components/schemas/AdminStockRecord'
      required:
      - variant_attribute_values
    User:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        ip:
          type: string
          nullable: true
          title: Ip address
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        date_joined:
          type: string
          format: date-time
          readOnly: true
        language:
          enum:
          - en
          - fr
          - th
          - de
          - sv
          - 'no'
          - it
          - es
          type: string
          default: en
          description: 'required : E164'
        is_blocked:
          type: boolean
          default: false
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/UserAddress'
        orders_count:
          type: integer
          readOnly: true
          default: 0
        subscriptions_count:
          type: integer
          readOnly: true
        total_spent:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          default: '0.00'
        user_type:
          type: string
          enum:
          - customer
          - lead
          - dashboard
          readOnly: true
          description: 'Available values : customer, lead, dashboard'
        tags:
          type: array
          items:
            type: string
            nullable: true
        accepts_marketing:
          type: boolean
          title: Subscribe to Marketing Emails
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
        user_agent:
          type: string
          nullable: true
          maxLength: 500
      required:
      - date_joined
      - email
      - id
      - orders_count
      - subscriptions_count
      - total_spent
      - user_type
    UserAddress:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          enum:
          - Mr
          - Miss
          - Mrs
          - Ms
          - Dr
          - ''
          type: string
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        line1:
          type: string
          title: First line of address
          maxLength: 255
        line2:
          type: string
          title: Second line of address
          maxLength: 255
        line3:
          type: string
          title: Third line of address
          maxLength: 255
        line4:
          type: string
          title: City
          maxLength: 255
        state:
          type: string
          title: State/Province
          maxLength: 255
        postcode:
          type: string
          title: Post/Zip-code
          maxLength: 64
        search_text:
          type: string
          readOnly: true
          title: Search text - used only for searching addresses
        phone_number:
          type: string
          maxLength: 128
        notes:
          type: string
          title: Instructions
          description: Tell us anything we should know when delivering your order.
        is_default_for_shipping:
          type: boolean
          title: Default shipping address?
        is_default_for_billing:
          type: boolean
          title: Default billing address?
        country:
          type: string
          title: ISO 3166-1 alpha-2
      required:
      - country
      - id
      - line1
      - line4
      - search_text
    UserInline:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 254
        ip:
          type: string
          nullable: true
          title: Ip address
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        accepts_marketing:
          type: boolean
          title: Subscribe to Marketing Emails
        language:
          type: string
          nullable: true
          title: Preferred language
          maxLength: 10
        user_agent:
          type: string
          nullable: true
      required:
      - id
    UserNote:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        message:
          type: string
      required:
      - created_at
      - id
      - message
      - updated_at
    Voucher:
      type: object
      description: Correctly map oscar fields to serializer fields.
      properties:
        name:
          type: string
          description: This will be shown in the checkout and basket once the coupon
            is entered
          maxLength: 128
        code:
          type: string
          description: Case insensitive / No spaces allowed
          maxLength: 128
        start_datetime:
          type: string
          format: date-time
        end_datetime:
          type: string
          format: date-time
      required:
      - code
      - end_datetime
      - name
      - start_datetime
    VoucherDiscount:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        voucher:
          $ref: '#/components/schemas/Voucher'
      required:
      - amount
      - description
      - name
    Webhook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        events:
          type: array
          items:
            type: string
            nullable: true
          description: See dashboard for webhooks for available events.
        secret_key:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          nullable: true
          title: Webhook Name
          maxLength: 255
        target:
          type: string
          format: uri
          title: Webhook target
          description: Full url for your webhook receiver endpoint.
          maxLength: 255
        active:
          type: boolean
        next_check_date:
          type: string
          format: date-time
          readOnly: true
        warning_count:
          type: integer
          readOnly: true
        api_version:
          type: string
          nullable: true
          maxLength: 64
      required:
      - created_at
      - events
      - id
      - next_check_date
      - target
      - updated_at
      - warning_count
servers:
  - url: https://{store}.29next.store
